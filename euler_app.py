import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import io
import tempfile
from PIL import Image
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.lib.units import cm
from reportlab.lib.utils import ImageReader

# Configura p√°gina
st.set_page_config(layout="wide", page_title="Visualiza√ß√£o de Euler")
st.title("üåÄ Visualiza√ß√£o de $e^{ix} = \cos(x) + i\\sin(x)$")

# üîä √Åudio explicativo
with st.expander("üîä Ou√ßa a explica√ß√£o da f√≥rmula de Euler"):
    st.audio("assets/explicacao_euler.mp3")

# üéõÔ∏è Slider interativo
x = st.slider("Escolha o valor de x (em radianos):", 0.0, 2*np.pi, 0.0, step=0.01)
z = np.exp(1j * x)
cosx = np.cos(x)
sinx = np.sin(x)

# üé® Gerar gr√°fico
fig, ax = plt.subplots(figsize=(6,6))
ax.set_aspect('equal')
ax.set_xlim(-1.2, 1.2)
ax.set_ylim(-1.2, 1.2)
ax.set_title("Plano complexo")

# C√≠rculo unit√°rio
circle = plt.Circle((0, 0), 1, fill=False, linestyle="--", color="gray")
ax.add_artist(circle)

# Vetores
ax.plot([0, z.real], [0, z.imag], 'r-', lw=2, label=r"$e^{ix}$")
ax.plot(z.real, z.imag, 'ro')
ax.plot([0, cosx], [0, 0], 'b--', label=r"$\cos(x)$")
ax.plot([cosx, cosx], [0, sinx], 'g--', label=r"$\sin(x)$")
ax.plot(cosx, 0, 'bo')
ax.plot(cosx, sinx, 'go')

ax.legend(loc='upper left')
ax.grid(True)
ax.set_xlabel("Re (Real)")
ax.set_ylabel("Im (Imagin√°rio)")
st.pyplot(fig)

# üì• Download da imagem PNG
buf = io.BytesIO()
fig.savefig(buf, format="png")
st.download_button("üì∑ Baixar gr√°fico como imagem", data=buf.getvalue(),
                   file_name="grafico_euler.png", mime="image/png")

# üìä Mostrar valores
st.markdown(f"""
### üìä Valores num√©ricos:
- \( x = {x:.3f} \) rad
- \( \cos(x) = {cosx:.3f} \)
- \( \sin(x) = {sinx:.3f} \)
- \( e^{{ix}} = {z.real:.3f} + {z.imag:.3f}i \)
""")

# üìÑ Gerar PDF com gr√°fico e explica√ß√£o
def gerar_pdf(x, cosx, sinx, z, fig):
    buffer_pdf = io.BytesIO()
    c = canvas.Canvas(buffer_pdf, pagesize=A4)
    width, height = A4

    c.setFont("Helvetica-Bold", 16)
    c.drawString(2*cm, height - 2*cm, "Visualiza√ß√£o da F√≥rmula de Euler")

    texto = (
        f"A f√≥rmula de Euler conecta a fun√ß√£o exponencial complexa com trigonometria:\n"
        f"    e^ix = cos(x) + i¬∑sin(x)\n\n"
        f"Para x = {x:.3f} rad:\n"
        f" - cos(x) = {cosx:.3f}\n"
        f" - sin(x) = {sinx:.3f}\n"
        f" - e^ix = {z.real:.3f} + {z.imag:.3f}i\n\n"
        f"O gr√°fico abaixo mostra a posi√ß√£o de e^ix no c√≠rculo unit√°rio."
    )

    c.setFont("Helvetica", 12)
    text_obj = c.beginText(2*cm, height - 3.5*cm)
    for linha in texto.split('\n'):
        text_obj.textLine(linha)
    c.drawText(text_obj)

    # Salvar imagem tempor√°ria
    temp_img = tempfile.NamedTemporaryFile(delete=False, suffix=".png")
    fig.savefig(temp_img.name, format="png", bbox_inches="tight")
    temp_img.close()

    # Adicionar imagem ao PDF
    img = Image.open(temp_img.name)
    img_width, img_height = img.size
    aspect = img_height / img_width
    target_width = width - 4*cm
    target_height = target_width * aspect

    c.drawImage(ImageReader(temp_img.name), 2*cm, height - 3.5*cm - target_height - 1*cm,
                width=target_width, height=target_height)

    c.showPage()
    c.save()
    buffer_pdf.seek(0)
    return buffer_pdf

# Bot√£o para download do PDF
pdf_bytes = gerar_pdf(x, cosx, sinx, z, fig)
st.download_button("üìÑ Baixar PDF com gr√°fico e explica√ß√£o",
                   data=pdf_bytes,
                   file_name="formula_euler.pdf",
                   mime="application/pdf")
